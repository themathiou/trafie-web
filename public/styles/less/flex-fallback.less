.flexbox {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flex;
  display: flex;
}

.flexbox-inline {
  display: -webkit-inline-box;
  display: -moz-inline-box;
  display: -ms-inline-flexbox;
  display: -webkit-inline-flex;
  display: inline-flex;
}

.flex-column {
      -webkit-box-orient: vertical;
         -moz-box-orient: vertical;
          -ms-box-orient: vertical;
              box-orient: vertical;
  -webkit-flex-direction: column;
     -moz-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
}

.flex-row {
    -webkit-box-orient: horizontal;
    -moz-box-orient: horizontal;
    -ms-box-orient: horizontal;
    box-orient: horizontal;
    -webkit-flex-direction: row;
    -moz-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
}

.flex-direction(@direction: row) {
  -webkit-flex-direction: @direction;
     -moz-flex-direction: @direction;
      -ms-flex-direction: @direction;
          flex-direction: @direction;
}

// <flex-direction> || <flex-wrap>
.flex-flow(@flow: initial) {
  -webkit-flex-flow: @flow;
     -moz-flex-flow: @flow;
      -ms-flex-flow: @flow;
          flex-flow: @flow;
}

.flex(@values: 1 auto) {
  -webkit-box-flex: @values;
     -moz-box-flex: @values;
      -ms-box-flex: @values;
          box-flex: @values;
      -webkit-flex: @values;
         -moz-flex: @values;
          -ms-flex: @values;
              flex: @values;
}

.flex-grow(@grow: 1) {
  -webkit-flex-grow: @grow;
     -moz-flex-grow: @grow;
      -ms-flex-grow: @grow;
          flex-grow: @grow;
}

.flex-shrink(@shrink: 1) {
  -webkit-flex-shrink: @shrink;
     -moz-flex-shrink: @shrink;
      -ms-flex-shrink: @shrink;
          flex-shrink: @shrink;
}
// https://css-tricks.com/almanac/properties/f/flex-basis/
// When omitted from the flex shorthand, its specified value is the length zero.
.flex-basis(@width: 0) {
  -webkit-flex-basis: @width;
     -moz-flex-basis: @width;
      -ms-flex-basis: @width;
          flex-basis: @width;
}

.align-items(@align: stretch) {
    -webkit-box-align: @align;
       -moz-box-align: @align;
       -ms-flex-align: @align;
        -ms-box-align: @align;
            box-align: @align;
  -webkit-align-items: @align;
     -moz-align-items: @align;
      -ms-align-items: @align;
          align-items: @align;
}

// auto | flex-start | flex-end | center | baseline | stretch
.align-self(@align: center) {
  -webkit-align-self: @align;
     -moz-align-self: @align;
      -ms-align-self: @align;
          align-self: @align;
}

// flex-start | flex-end | center | space-between | space-around | stretch
.align-content(@align: stretch) {
  -webkit-align-content: @align;
     -moz-align-content: @align;
      -ms-align-content: @align;
          align-content: @align;
}

// flex-start | flex-end | center | space-between | space-around
.justify-content(@justify: flex-start) {
  -webkit-justify-content: @justify;
     -moz-justify-content: @justify;
      -ms-justify-content: @justify;
          justify-content: @justify;
}

// start | center | end | justify | distribute - Old syntax
.ms-justify-content(@justify: start) {
  -webkit-box-pack: @justify;
     -moz-box-pack: @justify;
      -ms-box-pack: @justify;
          box-pack: @justify;
     -ms-flex-pack: @justify;
}

.flex-order(@order: 0) {
  -webkit-order: @order;
     -moz-order: @order;
      -ms-order: @order;
          order: @order;
}

.flex-wrap(@wrap: wrap) {
  -webkit-flex-wrap: @wrap;
     -moz-flex-wrap: @wrap;
      -ms-flex-wrap: @wrap;
          flex-wrap: @wrap;
}